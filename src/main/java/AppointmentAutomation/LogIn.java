package AppointmentAutomation;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
* @description Appointment tracking system
* @date 06/06/2021
* @author Samil Bilal OZAYDIN - samilbilal.ozaydin@stu.fsm.edu.tr
*/
public class LogIn extends javax.swing.JFrame {

    private static String identificationNumber;//the identification number to use in main screen
    //and other most of static variables are going to use in main screen
    private static String personalName;//for getName(), it is alternative variable name 
    private static String surname;
    private static String email;
    private static String gender;
    private static String birthday;
    private static String weight;
    private static String userheight;//for getHeight(), it is alternative variable name
    private static String userType;
    private static String department;
    private static String phoneNumber;
    private static String id;
    private static String userName;

    public LogIn() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Log In");
        
        int securityNumber = (int) (Math.random() * 9999);
        this.lbl_securityNumberInt.setText(Integer.toString(securityNumber));//security number is prepared for confirmation
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_username = new javax.swing.JLabel();
        lbl_password = new javax.swing.JLabel();
        txt_LogInusername = new javax.swing.JTextField();
        btn_login = new javax.swing.JButton();
        btn_register = new javax.swing.JButton();
        txt_LogInpassword = new javax.swing.JPasswordField();
        pnl_logInBackground = new javax.swing.JPanel();
        txt_pnlBackgroundText = new javax.swing.JLabel();
        lbl_identificationNumber = new javax.swing.JLabel();
        lbl_phoneNumber = new javax.swing.JLabel();
        ftxt_phoneNumber = new javax.swing.JFormattedTextField();
        txt_identicationNumber = new javax.swing.JTextField();
        lbl_securityNumber = new javax.swing.JLabel();
        pnl_securityNumber = new javax.swing.JPanel();
        lbl_securityNumberInt = new javax.swing.JLabel();
        txt_securityNumber = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(400, 550));
        setMinimumSize(new java.awt.Dimension(400, 550));
        setPreferredSize(new java.awt.Dimension(400, 550));

        lbl_username.setText("Username :");

        lbl_password.setText("Password :");

        btn_login.setText("Log in");
        btn_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_loginActionPerformed(evt);
            }
        });

        btn_register.setText("Register");
        btn_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registerActionPerformed(evt);
            }
        });

        pnl_logInBackground.setBackground(new java.awt.Color(0, 255, 255));
        pnl_logInBackground.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txt_pnlBackgroundText.setFont(new java.awt.Font("Arial Nova Light", 1, 14)); // NOI18N
        txt_pnlBackgroundText.setForeground(new java.awt.Color(51, 51, 255));
        txt_pnlBackgroundText.setText("The Appoinment Automation");

        javax.swing.GroupLayout pnl_logInBackgroundLayout = new javax.swing.GroupLayout(pnl_logInBackground);
        pnl_logInBackground.setLayout(pnl_logInBackgroundLayout);
        pnl_logInBackgroundLayout.setHorizontalGroup(
            pnl_logInBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_logInBackgroundLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(txt_pnlBackgroundText)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        pnl_logInBackgroundLayout.setVerticalGroup(
            pnl_logInBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_logInBackgroundLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(txt_pnlBackgroundText, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );

        lbl_identificationNumber.setText("Identification Number:");

        lbl_phoneNumber.setText("Phone Number :");

        try {
            ftxt_phoneNumber.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("+90 (###) ###-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lbl_securityNumber.setText("Security Number:");

        pnl_securityNumber.setBackground(new java.awt.Color(0, 0, 0));

        lbl_securityNumberInt.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lbl_securityNumberInt.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout pnl_securityNumberLayout = new javax.swing.GroupLayout(pnl_securityNumber);
        pnl_securityNumber.setLayout(pnl_securityNumberLayout);
        pnl_securityNumberLayout.setHorizontalGroup(
            pnl_securityNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_securityNumberLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_securityNumberInt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnl_securityNumberLayout.setVerticalGroup(
            pnl_securityNumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_securityNumberLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_securityNumberInt, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(lbl_identificationNumber))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(txt_identicationNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lbl_phoneNumber)
                                .addGap(28, 28, 28))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_username)
                                    .addComponent(lbl_password, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(54, 54, 54)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_LogInusername)
                            .addComponent(txt_LogInpassword)
                            .addComponent(ftxt_phoneNumber)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lbl_securityNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_securityNumber))
                            .addGap(18, 18, 18)
                            .addComponent(pnl_securityNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btn_login, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_register, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(pnl_logInBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(83, 83, 83))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(pnl_logInBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_username)
                    .addComponent(txt_LogInusername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_LogInpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_password))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftxt_phoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_phoneNumber))
                .addGap(18, 18, 18)
                .addComponent(lbl_identificationNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_identicationNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbl_securityNumber)
                        .addGap(18, 18, 18)
                        .addComponent(txt_securityNumber))
                    .addComponent(pnl_securityNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_login)
                    .addComponent(btn_register))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_loginActionPerformed
        //User can log in the program if user's input is the same as database informations

        String username = txt_LogInusername.getText();
        char[] passwordArr = txt_LogInpassword.getPassword();
        String password = "";
        for (char ch : passwordArr) {
            password += ch;
        }
        String phoneNumber = ftxt_phoneNumber.getText();
        String identificationNumber = txt_identicationNumber.getText();
        String securityNumber = txt_securityNumber.getText();

        //Regular Expression section. All of input are controlled by certain pattern
        String pattern = "";
        String warning = "";

        pattern = "^[a-zA-Z0-9]{3,}$";
        warning = "Please, enter at least 3 letter";
        if (!inputContentControl(pattern, username, warning)) {
            return;
        }
        pattern = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z0-9]{5,}$";
        warning = "Please, for password, enter at least 5 letter and enter at least 1 uppercase,1 lowercase and 1 digit.";
        if (!inputContentControl(pattern, password, warning)) {
            return;
        }
        pattern = "^\\d{11}$";
        warning = "Please, enter 11 digit to identification number";
        if (!inputContentControl(pattern, identificationNumber, warning)) {
            return;
        }

        //According to inputs, user is controlled
        if (userConfirmation(username, password, phoneNumber, identificationNumber, securityNumber)) {
            //Main screen is executed
            executionOfMainScreen();

        }
    }//GEN-LAST:event_btn_loginActionPerformed
    private boolean userConfirmation(String username, String password, String phoneNumber, String identificationNumber, String securityNumber) {
        if (!securityNumber.equals(this.lbl_securityNumberInt.getText())) {//Security number is controlled.
            JOptionPane.showMessageDialog(this, "The security number is wrong. Please enter the input again.");
            return false;
        }

        //Following, database is transmitted and the inputs are compored with database information.
        Connection conn = null;
        try {
            conn = DriverManager.getConnection("jdbc:derby://localhost:1527/AppoinmentProgram", "sa", "as");
            String query = "SELECT * FROM TBL_USERS";
            Statement stmt = conn.createStatement();
            ResultSet rst = stmt.executeQuery(query);
            while (rst.next()) {

                String usernameR = rst.getString("USERNAME");
                String passwordR = rst.getString("PASSWORD");
                String identificationNumberR = rst.getString("IDENTIFICATION_NUMBER");
                String phoneNumberR = rst.getString("PHONE_NUMBER");//these four variable are going to use for comparing                            

                if (identificationNumberR.equals(identificationNumber) && phoneNumberR.equals(phoneNumber) && usernameR.equals(username) && passwordR.equals(password)) {
                    String personalNameR = rst.getString("NAME");
                    String surnameR = rst.getString("SURNAME");
                    String emailR = rst.getString("E_MAIL");
                    String genderR = rst.getString("GENDER");
                    String birthdayR = rst.getString("BIRTHDAY");
                    String weightR = rst.getString("WEIGHT");
                    String heightR = rst.getString("HEIGHT");
                    String userTypeR = rst.getString("USER_TYPE");
                    String departmentR = rst.getString("DEPARTMENT");//after confirmation, these variable are created to specify main screen informations.
                    String idR = rst.getString("ID");

                    this.identificationNumber = identificationNumberR;
                    this.personalName = personalNameR;
                    this.surname = surnameR;
                    this.email = emailR;
                    this.gender = genderR;
                    this.birthday = birthdayR;
                    this.weight = weightR;
                    this.userheight = heightR;
                    this.userType = userTypeR;
                    this.department = departmentR;
                    this.phoneNumber = phoneNumberR;
                    this.id = idR;
                    this.userName = usernameR;

                    rst.close();
                    stmt.close();
                    conn.close();
                    return true;
                }
            }
            JOptionPane.showMessageDialog(this, "There is not user according to this input. Please enter your information again");

        } catch (SQLException ex) {
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(LogIn.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    public boolean inputContentControl(String pattern, String input, String warning) {
        //this method control precision of input which come from regex section.
        Matcher matcher;
        if (input.isEmpty()) {
            JOptionPane.showMessageDialog(this, "One or more information is empty. Please be sure to fill all of information");
            return false;
        } else {
            matcher = Pattern.compile(pattern).matcher(input);
            if (!matcher.find()) {
                JOptionPane.showMessageDialog(this, warning);
                return false;
            }
        }
        return true;
    }
    private void btn_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registerActionPerformed
        executionOfRegisterScreen();
    }//GEN-LAST:event_btn_registerActionPerformed
    public void executionOfRegisterScreen() {
        //Register screen is created.
        Register registerScreen = new Register(this);
        registerScreen.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(false);
        registerScreen.setVisible(true);
    }

    public void executionOfMainScreen() {
        //main screen is created.
        MainScreen mainScreen = new MainScreen();
        mainScreen.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setVisible(false);
        mainScreen.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogIn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_login;
    private javax.swing.JButton btn_register;
    private javax.swing.JFormattedTextField ftxt_phoneNumber;
    private javax.swing.JLabel lbl_identificationNumber;
    private javax.swing.JLabel lbl_password;
    private javax.swing.JLabel lbl_phoneNumber;
    private javax.swing.JLabel lbl_securityNumber;
    private javax.swing.JLabel lbl_securityNumberInt;
    private javax.swing.JLabel lbl_username;
    private javax.swing.JPanel pnl_logInBackground;
    private javax.swing.JPanel pnl_securityNumber;
    private javax.swing.JPasswordField txt_LogInpassword;
    private javax.swing.JTextField txt_LogInusername;
    private javax.swing.JTextField txt_identicationNumber;
    private javax.swing.JLabel txt_pnlBackgroundText;
    private javax.swing.JTextField txt_securityNumber;
    // End of variables declaration//GEN-END:variables

    public static String getIdentificationNumber() {
        return identificationNumber;
    }

    public static String getPersonalName() {
        return personalName;
    }

    public static String getSurname() {
        return surname;
    }

    public static String getEmail() {
        return email;
    }

    public static String getGender() {
        return gender;
    }

    public static String getBirthday() {
        return birthday;
    }

    public static String getWeight() {
        return weight;
    }

    public static String getUserheight() {
        return userheight;
    }

    public static String getUserType() {
        return userType;
    }

    public static String getPhoneNumber() {
        return phoneNumber;
    }

    public static String getDepartment() {
        return department;
    }

    public static void setDepartment(String aDepartment) {
        department = aDepartment;
    }
  
    public static String getId() {
        return id;
    }

    public static String getUserName() {
        return userName;
    }

}
